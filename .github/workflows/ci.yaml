name: "CI"
on:
  pull_request:
  push:
    branches:
      - main

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  ci-pass:
    name: CI is green
    runs-on: ubuntu-latest
    needs:
      - test-linux
      - test-linux-aarch64
      - test-macos
      - test-windows
      - lint
      - coverage
    steps:
      - run: exit 0

  test-linux:
    runs-on: [self-hosted, Linux, amd64]

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      # - uses: Swatinem/rust-cache@v1
      - name: Run tests
        run: |
          cargo check
          cargo test

  test-linux-aarch64:
    runs-on: [self-hosted, Linux, aarch64]

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    # - uses: Swatinem/rust-cache@v1
    - name: Run tests
      run: |
        cargo check
        cargo test

  test-macos:
    runs-on: [self-hosted, macOS]

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      # - uses: Swatinem/rust-cache@v1
      - name: Run tests
        run: |
          cargo check
          cargo test

  test-windows:
    runs-on: [self-hosted, Windows]

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      # - uses: Swatinem/rust-cache@v1
      - name: Run tests
        run: |
          cargo check
          cargo test

  lint:
    runs-on: [self-hosted, Linux, amd64]

    strategy:
      matrix:
        rust:
          - nightly

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      # - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Format check
        run: |
          cargo fmt -- --check
  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    permissions:
      contents: read
      checks: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov

      - name: Generate coverage (LCOV + HTML)
        run: |
          cargo llvm-cov --workspace --doctests \
            --lcov --output-path lcov.info
          cargo llvm-cov --workspace --doctests --html

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: target/llvm-cov/html

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          fail_ci_if_error: true
          verbose: true
